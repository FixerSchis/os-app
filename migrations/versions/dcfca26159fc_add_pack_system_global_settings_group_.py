"""Add pack system, global settings, group type model, and related changes

Revision ID: dcfca26159fc
Revises: b4a1290dd816
Create Date: 2025-06-24 09:55:31.113693

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = "dcfca26159fc"
down_revision = "b4a1290dd816"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "global_settings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("character_income_ec", sa.Integer(), nullable=False),
        sa.Column("group_income_contribution", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "group_types",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("income_items", sa.String(), nullable=True),
        sa.Column("income_items_discount", sa.Float(), nullable=False),
        sa.Column("income_substances", sa.Boolean(), nullable=False),
        sa.Column("income_substance_cost", sa.Integer(), nullable=False),
        sa.Column("income_medicaments", sa.Boolean(), nullable=False),
        sa.Column("income_medicament_cost", sa.Integer(), nullable=False),
        sa.Column("income_distribution", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.drop_table("role")
    op.drop_table("user_roles")
    with op.batch_alter_table("ability", schema=None) as batch_op:
        batch_op.add_column(sa.Column("additional_group_income", sa.Integer(), nullable=True))

    with op.batch_alter_table("character", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("pack_complete", sa.Boolean(), nullable=False, server_default=sa.false())
        )
        batch_op.alter_column(
            "character_pack", existing_type=sqlite.JSON(), type_=sa.String(), existing_nullable=True
        )

    with op.batch_alter_table("character_audit_log", schema=None) as batch_op:
        batch_op.alter_column(
            "action",
            existing_type=sa.VARCHAR(length=17),
            type_=sa.Enum(
                "create",
                "edit",
                "status_change",
                "skill_change",
                "reputation_change",
                "funds_added",
                "funds_removed",
                "funds_set",
                "group_joined",
                "group_left",
                "condition_change",
                "cybernetics_change",
                name="characterauditaction",
                native_enum=False,
            ),
            existing_nullable=False,
        )

    with op.batch_alter_table("character_conditions", schema=None) as batch_op:
        batch_op.alter_column("current_stage", existing_type=sa.INTEGER(), nullable=True)

    with op.batch_alter_table("events", schema=None) as batch_op:
        batch_op.add_column(sa.Column("booking_deadline", sa.DateTime(), nullable=False))

    with op.batch_alter_table("group", schema=None) as batch_op:
        batch_op.add_column(sa.Column("group_type_id", sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column("group_pack", sa.String(), nullable=True))
        batch_op.add_column(
            sa.Column("pack_complete", sa.Boolean(), nullable=False, server_default=sa.false())
        )
        batch_op.create_foreign_key(
            "fk_group_group_type_id", "group_types", ["group_type_id"], ["id"]
        )
        batch_op.drop_column("pack_data")
        batch_op.drop_column("type")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("group", schema=None) as batch_op:
        batch_op.add_column(sa.Column("type", sa.VARCHAR(length=10), nullable=False))
        batch_op.add_column(sa.Column("pack_data", sa.TEXT(), nullable=True))
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_column("pack_complete")
        batch_op.drop_column("group_pack")
        batch_op.drop_column("group_type_id")

    with op.batch_alter_table("events", schema=None) as batch_op:
        batch_op.drop_column("booking_deadline")

    with op.batch_alter_table("character_conditions", schema=None) as batch_op:
        batch_op.alter_column("current_stage", existing_type=sa.INTEGER(), nullable=False)

    with op.batch_alter_table("character_audit_log", schema=None) as batch_op:
        batch_op.alter_column(
            "action",
            existing_type=sa.Enum(
                "create",
                "edit",
                "status_change",
                "skill_change",
                "reputation_change",
                "funds_added",
                "funds_removed",
                "funds_set",
                "group_joined",
                "group_left",
                "condition_change",
                "cybernetics_change",
                name="characterauditaction",
                native_enum=False,
            ),
            type_=sa.VARCHAR(length=17),
            existing_nullable=False,
        )

    with op.batch_alter_table("character", schema=None) as batch_op:
        batch_op.alter_column(
            "character_pack", existing_type=sa.String(), type_=sqlite.JSON(), existing_nullable=True
        )
        batch_op.drop_column("pack_complete")

    with op.batch_alter_table("ability", schema=None) as batch_op:
        batch_op.drop_column("additional_group_income")

    op.create_table(
        "user_roles",
        sa.Column("user_id", sa.INTEGER(), nullable=False),
        sa.Column("role_id", sa.INTEGER(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["role.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "role_id"),
    )
    op.create_table(
        "role",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(length=20), nullable=False),
        sa.Column("description", sa.VARCHAR(length=100), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.drop_table("group_types")
    op.drop_table("global_settings")
    # ### end Alembic commands ###
