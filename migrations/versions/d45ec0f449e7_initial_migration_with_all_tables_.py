"""Initial migration with all tables including dark mode preference

Revision ID: d45ec0f449e7
Revises: 
Create Date: 2025-06-21 11:04:33.120841

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd45ec0f449e7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('character_tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('conditions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('cybernetics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('neural_shock_value', sa.Integer(), nullable=False),
    sa.Column('adds_engineering_mods', sa.Integer(), nullable=True),
    sa.Column('adds_engineering_downtime', sa.Integer(), nullable=True),
    sa.Column('adds_science_downtime', sa.Integer(), nullable=True),
    sa.Column('science_type', sa.Enum('generic', 'life', 'corporeal', 'etheric', name='sciencetype', native_enum=False), nullable=True),
    sa.Column('wiki_slug', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_number', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('event_type', sa.Enum('mainline', 'sanctioned', 'online', name='eventtype', native_enum=False), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('early_booking_deadline', sa.DateTime(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('location', sa.String(length=500), nullable=True),
    sa.Column('google_maps_link', sa.String(length=500), nullable=True),
    sa.Column('meal_ticket_available', sa.Boolean(), nullable=True),
    sa.Column('meal_ticket_price', sa.Float(), nullable=True),
    sa.Column('bunks_available', sa.Boolean(), nullable=True),
    sa.Column('standard_ticket_price', sa.Float(), nullable=False),
    sa.Column('early_booking_ticket_price', sa.Float(), nullable=False),
    sa.Column('child_ticket_price_12_15', sa.Float(), nullable=False),
    sa.Column('child_ticket_price_7_11', sa.Float(), nullable=False),
    sa.Column('child_ticket_price_under_7', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_number')
    )
    op.create_table('exotic_substances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.Enum('generic', 'life', 'corporeal', 'etheric', name='sciencetype', native_enum=False), nullable=False),
    sa.Column('wiki_slug', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('faction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('wiki_slug', sa.String(length=100), nullable=False),
    sa.Column('allow_player_characters', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('wiki_slug')
    )
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.Enum('military', 'scientific', 'corporate', name='grouptype', native_enum=False), nullable=False),
    sa.Column('bank_account', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('item_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('id_prefix', sa.String(length=2), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('medicaments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('wiki_slug', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('wiki_slug', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('sample_tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('skill_type', sa.String(length=50), nullable=True),
    sa.Column('adds_engineering_mods', sa.Integer(), nullable=True),
    sa.Column('adds_engineering_downtime', sa.Integer(), nullable=True),
    sa.Column('adds_science_downtime', sa.Integer(), nullable=True),
    sa.Column('science_type', sa.Enum('generic', 'life', 'corporeal', 'etheric', name='sciencetype', native_enum=False), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('base_cost', sa.Integer(), nullable=False),
    sa.Column('can_purchase_multiple', sa.Boolean(), nullable=False),
    sa.Column('cost_increases', sa.Boolean(), nullable=False),
    sa.Column('character_sheet_values', sa.String(), nullable=True),
    sa.Column('required_skill_id', sa.Integer(), nullable=True),
    sa.Column('required_factions', sa.String(), nullable=True),
    sa.Column('required_species', sa.String(), nullable=True),
    sa.Column('required_tags', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['required_skill_id'], ['skill.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('species',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('wiki_page', sa.String(length=255), nullable=False),
    sa.Column('permitted_factions', sa.String(), nullable=False),
    sa.Column('body_hits_type', sa.Enum('locational', 'global', name='bodyhitstype', native_enum=False), nullable=False),
    sa.Column('body_hits', sa.Integer(), nullable=False),
    sa.Column('death_count', sa.Integer(), nullable=False),
    sa.Column('keywords', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('surname', sa.String(length=50), nullable=True),
    sa.Column('pronouns_subject', sa.String(length=20), nullable=True),
    sa.Column('pronouns_object', sa.String(length=20), nullable=True),
    sa.Column('roles', sa.String(length=255), nullable=False),
    sa.Column('character_points', sa.Float(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('verification_token', sa.String(length=100), nullable=True),
    sa.Column('verification_token_expires', sa.DateTime(), nullable=True),
    sa.Column('new_email', sa.String(length=120), nullable=True),
    sa.Column('email_change_token', sa.String(length=100), nullable=True),
    sa.Column('email_change_token_expires', sa.DateTime(), nullable=True),
    sa.Column('reset_token', sa.String(length=100), nullable=True),
    sa.Column('reset_token_expires', sa.DateTime(), nullable=True),
    sa.Column('notify_downtime_pack_enter', sa.Boolean(), nullable=True),
    sa.Column('notify_downtime_completed', sa.Boolean(), nullable=True),
    sa.Column('notify_new_event', sa.Boolean(), nullable=True),
    sa.Column('notify_event_ticket_assigned', sa.Boolean(), nullable=True),
    sa.Column('notify_event_details_updated', sa.Boolean(), nullable=True),
    sa.Column('notify_wiki_published', sa.Boolean(), nullable=True),
    sa.Column('dark_mode_preference', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('player_id')
    )
    op.create_table('wiki_page',
    sa.Column('slug', sa.String(length=200), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('slug')
    )
    op.create_table('wiki_tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ability',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('species_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('type', sa.Enum('generic', 'starting_skills', 'skill_discounts', name='abilitytype', native_enum=False), nullable=False),
    sa.Column('starting_skills', sa.String(), nullable=True),
    sa.Column('skill_discounts', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['species_id'], ['species.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('character',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('pronouns_subject', sa.String(length=20), nullable=True),
    sa.Column('pronouns_object', sa.String(length=20), nullable=True),
    sa.Column('faction_id', sa.Integer(), nullable=True),
    sa.Column('species_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('base_character_points', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('bank_account', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('character_pack', sa.JSON(), nullable=True),
    sa.Column('known_modifications', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['faction_id'], ['faction.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['species_id'], ['species.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('condition_stages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('condition_id', sa.Integer(), nullable=False),
    sa.Column('stage_number', sa.Integer(), nullable=False),
    sa.Column('rp_effect', sa.String(length=500), nullable=False),
    sa.Column('diagnosis', sa.String(length=500), nullable=False),
    sa.Column('cure', sa.String(length=500), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['condition_id'], ['conditions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('condition_id', 'stage_number', name='uix_condition_stage_number')
    )
    op.create_table('downtime_periods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'completed', name='downtimestatus', native_enum=False), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('item_blueprints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('item_type_id', sa.Integer(), nullable=False),
    sa.Column('blueprint_id', sa.Integer(), nullable=False),
    sa.Column('base_cost', sa.Integer(), nullable=False),
    sa.Column('purchaseable', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['item_type_id'], ['item_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('item_type_id', 'blueprint_id', name='uq_itemtype_blueprintid')
    )
    op.create_table('mod_type_restrictions',
    sa.Column('mod_id', sa.Integer(), nullable=False),
    sa.Column('item_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_type_id'], ['item_types.id'], ),
    sa.ForeignKeyConstraint(['mod_id'], ['mods.id'], ),
    sa.PrimaryKeyConstraint('mod_id', 'item_type_id')
    )
    op.create_table('print_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('character_sheet', 'character_id', 'item_card', 'medicament_card', 'condition_card', 'exotic_substance_label', name='printtemplatetype', native_enum=False), nullable=False),
    sa.Column('type_name', sa.String(length=100), nullable=False),
    sa.Column('width_mm', sa.Float(), nullable=False),
    sa.Column('height_mm', sa.Float(), nullable=False),
    sa.Column('front_html', sa.Text(), nullable=False),
    sa.Column('back_html', sa.Text(), nullable=True),
    sa.Column('css_styles', sa.Text(), nullable=False),
    sa.Column('has_back_side', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.Column('is_landscape', sa.Boolean(), nullable=False),
    sa.Column('items_per_row', sa.Integer(), nullable=False),
    sa.Column('items_per_column', sa.Integer(), nullable=False),
    sa.Column('margin_top_mm', sa.Float(), nullable=False),
    sa.Column('margin_bottom_mm', sa.Float(), nullable=False),
    sa.Column('margin_left_mm', sa.Float(), nullable=False),
    sa.Column('margin_right_mm', sa.Float(), nullable=False),
    sa.Column('gap_horizontal_mm', sa.Float(), nullable=False),
    sa.Column('gap_vertical_mm', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_table('sample',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.Enum('generic', 'life', 'corporeal', 'etheric', name='sciencetype', native_enum=False), nullable=False),
    sa.Column('is_researched', sa.Boolean(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('wiki_change_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wiki_image',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('data', sa.LargeBinary(), nullable=False),
    sa.Column('mimetype', sa.String(length=50), nullable=False),
    sa.Column('uploaded_by', sa.Integer(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['uploaded_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wiki_page_tags',
    sa.Column('page_slug', sa.String(length=200), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['page_slug'], ['wiki_page.slug'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['wiki_tag.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('page_slug', 'tag_id')
    )
    op.create_table('wiki_page_version',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('page_slug', sa.String(length=200), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PUBLISHED', 'PENDING', name='wikipageversionstatus'), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('diff', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['page_slug'], ['wiki_page.slug'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('character_audit_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('editor_user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('action', sa.Enum('create', 'edit', 'status_change', 'skill_change', 'reputation_change', 'funds_spent', name='characterauditaction', native_enum=False), nullable=False),
    sa.Column('changes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['editor_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('character_conditions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('condition_id', sa.Integer(), nullable=False),
    sa.Column('current_stage', sa.Integer(), nullable=False),
    sa.Column('current_duration', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['condition_id'], ['conditions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('character_id', 'condition_id', name='uix_character_condition')
    )
    op.create_table('character_cybernetics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('cybernetic_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['cybernetic_id'], ['cybernetics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('character_reputation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('faction_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['faction_id'], ['faction.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('character_id', 'faction_id', name='uix_character_faction')
    )
    op.create_table('character_skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('times_purchased', sa.Integer(), nullable=False),
    sa.Column('purchased_at', sa.DateTime(), nullable=False),
    sa.Column('purchased_by_user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['purchased_by_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('character_tags',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['character_tag.id'], ),
    sa.PrimaryKeyConstraint('character_id', 'tag_id')
    )
    op.create_table('downtime_packs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('period_id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('enter_pack', 'enter_downtime', 'manual_review', 'completed', name='downtimetaskstatus', native_enum=False), nullable=False),
    sa.Column('energy_credits', sa.Integer(), nullable=True),
    sa.Column('items', sa.JSON(), nullable=True),
    sa.Column('exotic_substances', sa.JSON(), nullable=True),
    sa.Column('conditions', sa.JSON(), nullable=True),
    sa.Column('samples', sa.JSON(), nullable=True),
    sa.Column('cybernetics', sa.JSON(), nullable=True),
    sa.Column('research_teams', sa.JSON(), nullable=True),
    sa.Column('purchases', sa.JSON(), nullable=True),
    sa.Column('modifications', sa.JSON(), nullable=True),
    sa.Column('engineering', sa.JSON(), nullable=True),
    sa.Column('science', sa.JSON(), nullable=True),
    sa.Column('research', sa.JSON(), nullable=True),
    sa.Column('reputation', sa.JSON(), nullable=True),
    sa.Column('review_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['downtime_periods.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_tickets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('ticket_type', sa.Enum('adult', 'child_12_15', 'child_7_11', 'child_under_7', 'meal_ticket_only', 'crew', name='tickettype', native_enum=False), nullable=False),
    sa.Column('meal_ticket', sa.Boolean(), nullable=True),
    sa.Column('requires_bunk', sa.Boolean(), nullable=True),
    sa.Column('price_paid', sa.Float(), nullable=False),
    sa.Column('assigned_by_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_invite',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_id', 'character_id', name='uix_group_character_invite')
    )
    op.create_table('item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('blueprint_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('expiry', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['blueprint_id'], ['item_blueprints.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('blueprint_id', 'item_id', name='uix_blueprint_itemid')
    )
    op.create_table('item_blueprint_mods',
    sa.Column('item_blueprint_id', sa.Integer(), nullable=False),
    sa.Column('mod_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_blueprint_id'], ['item_blueprints.id'], ),
    sa.ForeignKeyConstraint(['mod_id'], ['mods.id'], ),
    sa.PrimaryKeyConstraint('item_blueprint_id', 'mod_id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('recipient_name', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('response', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('responded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sender_id'], ['character.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sample_sample_tags',
    sa.Column('sample_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['sample_id'], ['sample.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['sample_tag.id'], ),
    sa.PrimaryKeyConstraint('sample_id', 'tag_id')
    )
    op.create_table('wiki_changelog_versions',
    sa.Column('changelog_id', sa.Integer(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['changelog_id'], ['wiki_change_log.id'], ),
    sa.ForeignKeyConstraint(['version_id'], ['wiki_page_version.id'], ),
    sa.PrimaryKeyConstraint('changelog_id', 'version_id')
    )
    op.create_table('wiki_section',
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('restriction_type', sa.Enum('ROLE', 'FACTION', 'SPECIES', 'REPUTATION', 'SKILL', 'CYBERNETIC', 'TAG', name='sectionrestrictiontype'), nullable=True),
    sa.Column('restriction_value', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['version_id'], ['wiki_page_version.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('version_id', 'id')
    )
    op.create_table('item_mods_applied',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('mod_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.ForeignKeyConstraint(['mod_id'], ['mods.id'], ),
    sa.PrimaryKeyConstraint('item_id', 'mod_id')
    )
    op.create_table('research',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.String(length=64), nullable=False),
    sa.Column('project_name', sa.String(length=200), nullable=False),
    sa.Column('type', sa.Enum('invention', 'artefact', name='researchtype', native_enum=False), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('research_stage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('research_id', sa.Integer(), nullable=False),
    sa.Column('stage_number', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['research_id'], ['research.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('research_id', 'stage_number', name='uix_research_stage_number')
    )
    op.create_table('character_research',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('research_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('current_stage_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['current_stage_id'], ['research_stage.id'], ),
    sa.ForeignKeyConstraint(['research_id'], ['research.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('research_stage_requirement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stage_id', sa.Integer(), nullable=False),
    sa.Column('requirement_type', sa.Enum('science', 'item', 'exotic', 'sample', name='researchrequirementtype', native_enum=False), nullable=False),
    sa.Column('science_type', sa.Enum('generic', 'life', 'corporeal', 'etheric', name='sciencetype', native_enum=False), nullable=True),
    sa.Column('item_type', sa.String(length=100), nullable=True),
    sa.Column('exotic_substance_id', sa.Integer(), nullable=True),
    sa.Column('sample_tag', sa.String(length=100), nullable=True),
    sa.Column('requires_researched', sa.Boolean(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exotic_substance_id'], ['exotic_substances.id'], ),
    sa.ForeignKeyConstraint(['stage_id'], ['research_stage.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('character_research_stage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_research_id', sa.Integer(), nullable=False),
    sa.Column('stage_id', sa.Integer(), nullable=False),
    sa.Column('stage_completed', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['character_research_id'], ['character_research.id'], ),
    sa.ForeignKeyConstraint(['stage_id'], ['research_stage.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('character_research_stage_requirement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_research_stage_id', sa.Integer(), nullable=False),
    sa.Column('requirement_id', sa.Integer(), nullable=False),
    sa.Column('progress', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_research_stage_id'], ['character_research_stage.id'], ),
    sa.ForeignKeyConstraint(['requirement_id'], ['research_stage_requirement.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('character_research_stage_requirement')
    op.drop_table('character_research_stage')
    op.drop_table('research_stage_requirement')
    op.drop_table('character_research')
    op.drop_table('research_stage')
    op.drop_table('research')
    op.drop_table('item_mods_applied')
    op.drop_table('wiki_section')
    op.drop_table('wiki_changelog_versions')
    op.drop_table('sample_sample_tags')
    op.drop_table('messages')
    op.drop_table('item_blueprint_mods')
    op.drop_table('item')
    op.drop_table('group_invite')
    op.drop_table('event_tickets')
    op.drop_table('downtime_packs')
    op.drop_table('character_tags')
    op.drop_table('character_skill')
    op.drop_table('character_reputation')
    op.drop_table('character_cybernetics')
    op.drop_table('character_conditions')
    op.drop_table('character_audit_log')
    op.drop_table('wiki_page_version')
    op.drop_table('wiki_page_tags')
    op.drop_table('wiki_image')
    op.drop_table('wiki_change_log')
    op.drop_table('user_roles')
    op.drop_table('sample')
    op.drop_table('print_templates')
    op.drop_table('mod_type_restrictions')
    op.drop_table('item_blueprints')
    op.drop_table('downtime_periods')
    op.drop_table('condition_stages')
    op.drop_table('character')
    op.drop_table('ability')
    op.drop_table('wiki_tag')
    op.drop_table('wiki_page')
    op.drop_table('user')
    op.drop_table('species')
    op.drop_table('skill')
    op.drop_table('sample_tag')
    op.drop_table('role')
    op.drop_table('mods')
    op.drop_table('medicaments')
    op.drop_table('item_types')
    op.drop_table('group')
    op.drop_table('faction')
    op.drop_table('exotic_substances')
    op.drop_table('events')
    op.drop_table('cybernetics')
    op.drop_table('conditions')
    op.drop_table('character_tag')
    # ### end Alembic commands ###
